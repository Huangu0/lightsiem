input {
        udp {
                port => 9020
                type => cisco
        }

#       stdin {
#               type => syslog
#       }
}

filter {
        if [type] == "cisco" {
                  grok {
                                #<167>%ASA-7-710005: TCP request discarded from 1.2.24.26/1069 to outside:7.8.8.8/50000
                                match => { "message" => "%{SYSLOG5424PRI}%{CISCO_EVENTID:Alert.Classification.Text}: %{GREEDYDATA:cisco_message}" }
                        }


                          if [Alert.Analyzer.Level] == "1" {
                                  mutate { add_field => [ "Alert.Analyzer.Level.Normalized", "13" ] }
                          } else if [Alert.Analyzer.Level] == "2" {
                                  mutate { add_field => [ "Alert.Analyzer.Level.Normalized", "12" ] }
                          } else if [Alert.Analyzer.Level] == "3" {
                                  mutate { add_field => [ "Alert.Analyzer.Level.Normalized", "7" ] }
                          } else if [Alert.Analyzer.Level] == "4" {
                                  mutate { add_field => [ "Alert.Analyzer.Level.Normalized", "5" ] }
                          } else if [Alert.Analyzer.Level] == "5" {
                                 mutate { add_field => [ "Alert.Analyzer.Level.Normalized", "2" ] }
                          } else if [Alert.Analyzer.Level] == "6" {
                                    mutate { add_field => [ "Alert.Analyzer.Level.Normalized", "1" ] }
                          } else if [Alert.Analyzer.Level] == "7" {
                                    mutate { add_field => [ "Alert.Analyzer.Level.Normalized", "0" ] }
                          }

                            mutate {
                                convert => [ "Alert.Analyzer.Level", "integer" ]
                                convert => [ "Alert.Analyzer.Level.Normalized", "integer" ]
                                add_field => [ "Alert.Analyzer.Level.Normalized.raw", "%{Alert.Analyzer.Level.Normalized}" ]
                            }

                        if [syslog5424_ts] {
                                  date {
                                      #2015-03-21T01:44:27.757618+03:00
                                      match => ["syslog5424_ts", "ISO8601"]
                                      target => "Alert.CreateTime"
                                  }
                        } else if [timestamp] {
                                  date {
                                      #Apr 19 11:55:57
                                      match => ["timestamp", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss"]
                                      target => "Alert.CreateTime"
                                  }
                        } else {
                                    mutate { add_field => [ "Alert.CreateTime", "%{@timestamp}" ] }
                        }

                         mutate { add_field => [ "Alert.Sensor.Node.Address", "%{host}" ] }

                         if ![Alert.Sensor.Node.Name] { mutate { add_field => [ "Alert.Sensor.Node.Name", "%{Alert.Sensor.Node.Address}" ] } }
  }
}


#output {
#  stdout { codec => rubydebug }
#}


